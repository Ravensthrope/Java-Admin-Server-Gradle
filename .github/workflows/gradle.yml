name: Java CI with Gradle

on:
  push:
    branches: ["main"]
    tags:
      - "v*"
  pull_request:
    branches: ["main"]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Grant execute permissions for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew bootJar bootWar # Build both JAR and WAR

      # Find JAR file
      - name: Find JAR file
        id: find-jar
        run: |
          JAR_FILE=$(find build/libs -name "*.jar" ! -name "*plain.jar" | head -n 1)
          echo "JAR_FILE=$JAR_FILE" >> $GITHUB_ENV
          echo "JAR_NAME=$(basename $JAR_FILE)" >> $GITHUB_ENV

      # Generate timestamp for tag
      - name: Generate timestamp
        if: github.ref == 'refs/heads/main'
        id: timestamp
        run: echo "timestamp=$(date +'v0.1.%Y%m%d.%H%M%S')" >> $GITHUB_OUTPUT

      # Create tag for main branch pushes
      - name: Create tag
        if: github.ref == 'refs/heads/main'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag ${{ steps.timestamp.outputs.timestamp }}
          git push origin ${{ steps.timestamp.outputs.timestamp }}

      # Debug step to check files
      - name: Debug - List build directory
        run: |
          echo "Contents of build/libs:"
          ls -la build/libs/
          echo "Found JAR file: ${{ env.JAR_FILE }}"

      # Create GitHub release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || steps.timestamp.outputs.timestamp }}
          release_name: Release ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || steps.timestamp.outputs.timestamp }}
          draft: false
          prerelease: false

      - name: Upload JAR to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.JAR_FILE }}
          asset_name: ${{ env.JAR_NAME }}
          asset_content_type: application/java-archive

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582
